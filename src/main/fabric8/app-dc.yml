apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    application: ${APPLICATION_NAME}
  name: ${APPLICATION_NAME}
spec:
  replicas: 1
  selector:
    deploymentConfig: ${APPLICATION_NAME}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        application: ${APPLICATION_NAME}
        deploymentConfig: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      containers:
      - env:
        - name: DB_SERVICE_PREFIX_MAPPING
          value: ${APPLICATION_NAME}-postgresql=DB
        - name: DB_JNDI
          value: ${DB_JNDI}
        - name: DB_USERNAME
          value: ${DB_USERNAME}
        - name: DB_PASSWORD
          value: ${DB_PASSWORD}
        - name: DB_DATABASE
          value: ${DB_DATABASE}
        - name: DB_MIN_POOL_SIZE
          value: ${DB_MIN_POOL_SIZE}
        - name: DB_MAX_POOL_SIZE
          value: ${DB_MAX_POOL_SIZE}
        - name: DB_TX_ISOLATION
          value: ${DB_TX_ISOLATION}
        - name: JWS_HTTPS_CERTIFICATE_DIR
          value: /etc/jws-secret-volume
        - name: JWS_HTTPS_CERTIFICATE
          value: ${JWS_HTTPS_CERTIFICATE}
        - name: JWS_HTTPS_CERTIFICATE_KEY
          value: ${JWS_HTTPS_CERTIFICATE_KEY}
        - name: JWS_HTTPS_CERTIFICATE_PASSWORD
          value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}
        - name: JWS_ADMIN_USERNAME
          value: ${JWS_ADMIN_USERNAME}
        - name: JWS_ADMIN_PASSWORD
          value: ${JWS_ADMIN_PASSWORD}
        image: ${APPLICATION_NAME}
        imagePullPolicy: Always
        name: ${APPLICATION_NAME}
        ports:
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - curl -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} 'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
              |grep -iq 'stateName *= *STARTED'
        volumeMounts:
        - mountPath: /etc/jws-secret-volume
          name: jws-certificate-volume
          readOnly: true
      serviceAccountName: jws-service-account
      terminationGracePeriodSeconds: 60
      volumes:
      - name: jws-certificate-volume
        secret:
          secretName: ${JWS_HTTPS_SECRET}
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - ${APPLICATION_NAME}
      from:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    type: ImageChange
  - type: ConfigChange